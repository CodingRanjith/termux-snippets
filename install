#!/usr/bin/env bash
## Author: Hakxcore https://github.com/hakxcore
## Colors
currentVersion="2.1.0"
RED="$(printf '\033[31m')"
GREEN="$(printf '\033[32m')"
ORANGE="$(printf '\033[33m')"
BLUE="$(printf '\033[34m')"
MAGENTA="$(printf '\033[35m')"
CYAN="$(printf '\033[36m')"
WHITE="$(printf '\033[37m')"
BLACK="$(printf '\033[30m')"
REDBG="$(printf '\033[41m')"
GREENBG="$(printf '\033[42m')"
ORANGEBG="$(printf '\033[43m')"
BLUEBG="$(printf '\033[44m')"
MAGENTABG="$(printf '\033[45m')"
CYANBG="$(printf '\033[46m')"
WHITEBG="$(printf '\033[47m')"
BLACKBG="$(printf '\033[40m')"
RESETBG="$(printf '\e[0m')"
BLINK="$(printf '\033[5;31m')"

declare -a tools=(cheat cipher covidinfo crypt cryptocurrency geo gif googler ipinfo jukebox lyrics meme movie news pwned qrify shodan shorturl termux-snippets todo transfer weather)
prefix="/data/data/com.termux/files"

installationEnd()
{
	echo -n "( •_•)"
	sleep .75
	echo -n -e "\r( •_•)>$BLUE⌐■-■$RESETBG"
	sleep .75
	echo -n -e "\r               "
	echo  -e "\r($BLUE⌐■_■$RESETBG)"
	sleep .5
	echo "Termux Snippets version $BLUE$currentVersion$RESETBG"
	echo  "$GREEN""https://github.com/hakxcore/Termux-snippets$RESETBG"
}

askInstall()
{
  read -p "$BLUE>$RESETBG Do you wish to install $BLUE$1$RESETBG [Y/n]: " answer
  answer=${answer:-Y}

  if [[ "$answer" == [Yy] ]]; then
	  if [[ $1 == "weather" ]]; then
		  cd $1 || return 1
		  echo -n "Installing $BLUE$1$RESETBG: "
		  chmod a+x $1
		  cp $1 $prefix/usr/bin > /dev/null 2>&1;
		  echo ""$GREEN"Success$RESETBG"
		  cd ..; installationEnd ; exit 1 || return
	  elif [[ $1 == "termux-snippets" ]]; then
     		echo -n "Installing $BLUE$1$RESETBG: "
      		chmod a+x $1
      		cp $1 $prefix/usr/bin > /dev/null 2>&1;
      		echo ""$GREEN"Success$RESETBG"
	  else 
		  cd $1 || return 1
		  echo -n "Installing $BLUE$1$RESETBG: "
		  chmod a+x $1
		  cp $1 $prefix/usr/bin > /dev/null 2>&1;
		  echo ""$GREEN"Success$RESETBG"
		  cd .. || return 1
	  fi
  fi
}

updateTool()
{
  if [[ -f  $prefix/usr/bin/$1 ]]; then
    cd $1 || return 1
    git pull origin
    echo -n "Installing $BLUE$1$RESETBG: "
    chmod a+x $1
    cp $1 $prefix/usr/bin > /dev/null 2>&1 || { echo "Failure"; echo "Error copying file, try running install script again"; exit 1; }
    echo ""$GREEN"Success$RESETBG"
    cd ..; installationEnd || return 1
  fi
}


singleInstall()
{
  cd $1 || exit 1
  echo -n "Installing $BLUE$1$RESETBG: "
  chmod a+x $1
  cp $1 $prefix/usr/bin > /dev/null 2>&1 || { echo "Failure"; echo "Error copying file, try running install script again"; exit 1; }
  echo ""$GREEN"Success$RESETBG"
  cd ..; installationEnd || exit 1
}


  if [[ $2 == "all" ]];then
    for tool in "${tools[@]}"; do
      singleInstall $tool || exit 1
    done
  else
    for tool in "${@:2}"; do
      singleInstall $tool || exit 1
    done
  fi
  
if [[ $# == 0 ]]; then
  for tool in "${tools[@]}"; do
    askInstall $tool || exit 1
  done
elif [[ $1 == "update" ]]; then
  echo "Updating scripts..."
  for tool in "${tools[@]}"; do
    updateTool $tool || exit 1
  done
  fi

  if [[ $1 == "all" ]]; then
  for tool in "${tools[@]}"; do
    singleInstall $tool || exit 1
  done
else
  singleInstall $1 || exit 1
fi
